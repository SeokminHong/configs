name: Publish
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        type: choice
        options:
          - 'patch'
          - 'minor'
          - 'major'
        default: 'patch'
      dry-run:
        description: 'Dry run'
        required: false
        type: boolean
        default: false
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup git config
        run: |
          git config --global user.email "ghdtjrald240@gmail.com"
          git config --global user.name "Seokmin (GitHub Actions)"
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      # - name: make deploy keys
      #   env:
      #     DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      #   run: |
      #     mkdir -p ~/.ssh/
      #     echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
      #     chmod 600 ~/.ssh/id_rsa
      #     ssh-keyscan github.com >> ~/.ssh/known_hosts
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'
      # Bump version
      - name: Bump version
        id: version
        shell: bash
        run: |
          version=$(npm version ${{ github.event.inputs.version }} -m "Bump version to %s")
          echo "version=${version}" >> $GITHUB_OUTPUT
      # Push changes
      - name: Push changes
        run: git push -u origin --follow-tags ${{ github.event.inputs.dry-run && '--dry-run' || '' }}
      - run: npm publish --provenance --access public ${{ github.event.inputs.dry-run && '--dry-run' || '' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # Create a release
      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.event.inputs.dry-run != 'true'
        with:
          tag_name: ${{ steps.version.outputs.version }}
          generate_release_notes: true
